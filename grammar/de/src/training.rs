use rustling_ontology_values::check::*;
use rustling_ontology_moment::*;
use rustling_ontology_values::dimension::*;
use rustling_ontology_values::ResolverContext;

pub fn examples_percentage(v: &mut Vec<::rustling::train::Example<Dimension>>) {
    example!(v, check_percentage(15.0), "15%", "fünfzehn prozent", "15 vom Hundert");
    example!(v, check_percentage(3.2), "3,2 %", "drei komma zwei prozent", "3,2 vom Hundert");
}

pub fn examples_temperature(v: &mut Vec<::rustling::train::Example<Dimension>>) {
    example!(v, check_temperature(3.0, Some("degree")), "3°", "3 °", "plus 3°", "3 ° über null");
    example!(v, check_temperature(71.0, Some("degree")), "71 grad", "71 Grad", "plus 71 Grad", "71 Grad über null", "ein und siebzig Grad");
    example!(v, check_temperature(-7.0, Some("degree")), "-7°", "-7 Grad", "minus sieben grad", "7 Grad unter null", "sieben grad unter dem gefrierpunkt", "7 Grad unterm gefrierpunkt");
    example!(v, check_temperature(-92.0, None), "zwei und neunzig unter dem gefrierpunkt", "92 unterm gefrierpunkt");
    example!(v, check_temperature(-18.0, Some("degree")), "-18°", "-18 Grad");
    example!(v, check_temperature(15.0, Some("celsius")), "15 celsius", "15 Grad Celsius", "fünfzehn Grad CELSIUS", "15 C", "15°C");
    example!(v, check_temperature(-115.0, Some("celsius")), "minus 115 celsius", "-115 Grad Celsius", "minus hundertfünfzehn Grad CELSIUS", "- 115 C", "-115°C");
    example!(v, check_temperature(78.0, Some("fahrenheit")), "78 fahrenheit", "78 Grad Fahrenheit", "achtundsiebzig Grad FAHRENHEIT", "78 f", "78°F");
    example!(v, check_temperature(-78.0, Some("fahrenheit")), "minus 78 fahrenheit", "-78 Grad Fahrenheit", "minus acht und siebzig Grad FAHRENHEIT", "- 78 f", "-78°F");
    example!(v, check_temperature(130.0, Some("kelvin")), "130 kelvin", "130 Grad Kelvin", "hundert dreißig Grad KELVIN", "130 k", "130°K");
}

pub fn examples_finance(v: &mut Vec<::rustling::train::Example<Dimension>>) {
    example!(v, check_finance(800.0, Some("$"), Precision::Exact), "800 dollar");
    example!(v, check_finance(2134.0, Some("$"), Precision::Exact), "2.134 $");
    example!(v, check_finance(90.0, Some("$"), Precision::Exact), "präzise neunzig $");
    example!(v, check_finance(478.0, Some("USD"), Precision::Exact), "478 US-Dollar");
    example!(v, check_finance(5.0, Some("USD"), Precision::Exact), "5 us$");
    example!(v, check_finance(674.0, Some("AUD"), Precision::Exact), "674 australische dollar");
    example!(v, check_finance(7438.0, Some("AUD"), Precision::Exact), "7438 AUD");
    example!(v, check_finance(8.0, Some("CAD"), Precision::Exact), "8Can$");
    example!(v, check_finance(5.0, Some("CAD"), Precision::Approximate), "ungefähr fünf Kanadische Dollars");
    example!(v, check_finance(1.0, Some("HKD"), Precision::Exact), "eines HKD");
    example!(v, check_finance(12.0, Some("HKD"), Precision::Exact), "12 hongkong dollarn");
    example!(v, check_finance(849.0, Some("EUR"), Precision::Approximate), "ungefähr 849 €");
    example!(v, check_finance(4775.0, Some("EUR"), Precision::Exact), "haargenau 4.775 Euro");
    example!(v, check_finance(30.0, Some("EUR"), Precision::Exact), "dreissig Euro");
    example!(v, check_finance(6739.0, Some("EUR"), Precision::Approximate), "circa 6739 €");
    example!(v, check_finance(839.0, Some("EUR"), Precision::Approximate), "ca 839 €");
    example!(v, check_finance(293.0, Some("EUR"), Precision::Approximate), "zirka 293 €");
    example!(v, check_finance(150.0, Some("EUR"), Precision::Approximate), "nahezu hundertfünfzig Euro");
    example!(v, check_finance(9840.0, Some("£"), Precision::Exact), "9840£");
    example!(v, check_finance(902.0, Some("£"), Precision::Approximate), "fast 902 Pfd.");
    example!(v, check_finance(230983.0, Some("£"), Precision::Approximate), "beinahe 230983 £");
    example!(v, check_finance(1000.0, Some("GBP"), Precision::Exact), "1000 Pfund Sterling");
    example!(v, check_finance(2.0, Some("CHF"), Precision::Exact), "zwei CHF");
    example!(v, check_finance(5.0, Some("CHF"), Precision::Exact), "Fünf schweizer Franken");
    example!(v, check_finance(1.0, Some("KR"), Precision::Exact), "einer KRONE");
    example!(v, check_finance(17000.0, Some("DKK"), Precision::Exact), "siebzehn tausend dänischen kronen");
    example!(v, check_finance(2.2, Some("NOK"), Precision::Exact), "genau 2,2 NOK");
    example!(v, check_finance(5.0, Some("NOK"), Precision::Exact), "5 norwegischer Kronen");
    example!(v, check_finance(1.0, Some("SEK"), Precision::Exact), "einer schwedischen Krone");
    example!(v, check_finance(1000000.0, Some("RUB"), Precision::Approximate), "fast eine million ₽");
    example!(v, check_finance(1.0, Some("RUB"), Precision::Exact), "1 russischer Rubel");
    example!(v, check_finance(100.0, Some("INR"), Precision::Exact), "sehr genau hundert indische Rupien");
    example!(v, check_finance(23.0, Some("INR"), Precision::Exact), "drei und zwanzig ₹");
    example!(v, check_finance(4000.0, Some("INR"), Precision::Exact), "exakt viertausend rupien");
    example!(v, check_finance(270.0, Some("JPY"), Precision::Exact), "270 yen");
    example!(v, check_finance(1.0, Some("CNY"), Precision::Exact), "1 Yuan");
    example!(v, check_finance(0.0, Some("¥"), Precision::Exact), "0¥");
    example!(v, check_finance(980.0, Some("KRW"), Precision::Exact), "ganz genau neunhundertachtzig Won");
    example!(v, check_finance(10.5, Some("KRW"), Precision::Exact), "10,5 ₩");
    example!(v, check_finance(1.0, Some("฿"), Precision::Exact), "1 bitcoin");
    example!(v, check_finance(10.0, Some("฿"), Precision::Exact), "zehn Bitcoins");
    example!(v, check_finance(800.0, Some("cent"), Precision::Exact), "achthundert cent");
    example!(v, check_finance(300.0, Some("cent"), Precision::Exact), "300 pennies");
    example!(v, check_finance(1.0, Some("cent"), Precision::Exact), "1 penny", "1 cent", "1 cts", "1 ct");
    example!(v, check_finance(10.5, Some("EUR"), Precision::Exact), "10 € 50 ¢");
    example!(v, check_finance(7.8, Some("$"), Precision::Approximate), "fast 7$ 80c");
    example!(v, check_finance(102.1, Some("GBP"), Precision::Exact), "hundert zwei britische pfund zehn pennies");
    example!(v, check_finance(105.0, Some("$"), Precision::Exact), "einhundert fünf dollar");
    example!(v, check_finance(1047.0, Some("EUR"), Precision::Approximate), "ungefähr eintausend siebenundvierzig Euro");
    example!(v, check_finance(1001.0, Some("CHF"), Precision::Exact), "tausendeines Schweizer Frankens");
    example!(v, check_finance(500736.0, Some("EUR"), Precision::Exact), "fünfhunderttausendsiebenhundertsechsunddreißig euro");
}

pub fn examples_datetime(v: &mut Vec<::rustling::train::Example<Dimension>>) {
    let c = ResolverContext::new(Interval::starting_at(Moment(Local.ymd(2013, 2, 12).and_hms(4, 30, 0)), Grain::Second));
    example!(v, check_moment!(c, [2013, 2, 12, 4, 30, 0]), "jetzt", "genau jetzt", "gerade eben");
    example!(v, check_moment!(c, [2013, 2, 12]), "heute", "zu dieser zeit");
    example!(v, check_moment!(c, [2013, 2, 11]), "gestern");
    example!(v, check_moment!(c, [2013, 2, 13]), "morgen");
    example!(v, check_moment!(c, [2013, 2, 18]), "montag", "mo.", "diesen montag");
    example!(v, check_moment!(c, [2013, 2, 18]), "Montag Feb 18", "Montag Februar 18");
    example!(v, check_moment!(c, [2013, 2, 19]), "dienstag");
    example!(v, check_moment!(c, [2013, 2, 14]), "donnerstag", "do", "do.");
    example!(v, check_moment!(c, [2013, 2, 15]), "freitag", "fr.");
    example!(v, check_moment!(c, [2013, 2, 16]), "samstag", "sa.");
    example!(v, check_moment!(c, [2013, 2, 17]), "sonntag", "so.");
    example!(v, check_moment!(c, [2013, 3, 1]), "1 märz", "erster märz");
    example!(v, check_moment!(c, [2015, 3, 3]), "märz 3 2015");
    example!(v, check_moment!(c, [2013, 2, 15]), "am 15ten");
    example!(v, check_moment!(c, [2013, 2, 15]), "15. februar", "15te februar", "15.2.", "am 15.2.");
    example!(v, check_moment!(c, [2014, 10]), "Oktober 2014");
    example!(v, check_moment!(c, [1974, 10, 31]), "31.10.1974", "31.10.74");
    example!(v, check_moment!(c, [2015, 4, 14]), "14 april 2015", "April 14 2015", "14te April 15");
    example!(v, check_moment!(c, [2013, 2, 19]), "nächsten dienstag");
    example!(v, check_moment!(c, [2013, 2, 22]), "übernächsten freitag");
    example!(v, check_moment!(c, [2013, 3]), "nächsten marz");
    example!(v, check_moment!(c, [2014, 3]), "übernächsten marz");
    example!(v, check_moment!(c, [2013, 2, 10]), "Sonntag Feb 10");
    example!(v, check_moment!(c, [2013, 2, 13]), "Mittwoch Feb 13");
    example!(v, check_moment!(c, [2013, 2, 18]), "Montag Feb 18");
    example!(v, check_moment!(c, [2013, 2, 11], Grain::Week), "diese woche");
    example!(v, check_moment!(c, [2013, 2, 18], Grain::Week), "kommende woche");
    example!(v, check_moment!(c, [2013, 2, 4], Grain::Week), "letzte woche");
    example!(v, check_moment!(c, [2013, 2, 18], Grain::Week), "nächste woche");
    example!(v, check_moment!(c, [2013, 1]), "letzten monat");
    example!(v, check_moment!(c, [2013, 3]), "nächsten monat");
    example!(v, check_moment!(c, [2013, 1, 1], Grain::Quarter), "dieses quartal");
    example!(v, check_moment!(c, [2013, 4, 1], Grain::Quarter), "nachstes quartal");
    example!(v, check_moment!(c, [2013, 7, 1], Grain::Quarter), "drittes quartal");
    example!(v, check_moment!(c, [2018, 10, 1], Grain::Quarter), "4tes quartal 2018");
    example!(v, check_moment!(c, [2012]), "letztes jahr");
    example!(v, check_moment!(c, [2013]), "dieses jahr");
    example!(v, check_moment!(c, [2014]), "nächstes jahr");
    example!(v, check_moment!(c, [2013, 2, 10]), "letzten sonntag", "sonntag der letzten woche", "sonntag letzte woche");
    example!(v, check_moment!(c, [2013, 2, 5]), "letzten dienstag");
    example!(v, check_moment!(c, [2013, 2, 19]), "nächsten dienstag");// when today is Tuesday, "mardi prochain" is a week from now
    example!(v, check_moment!(c, [2013, 2, 13]), "nächsten mittwoch");// when today is Tuesday, "mercredi prochain" is tomorrow
    example!(v, check_moment!(c, [2013, 2, 20]), "mittwoch der nachsten woche", "mittwoch nachste woche", "mittwoch nach dem nachsten"); // "mittwoch der nächsten woche", "mittwoch nächste woche", "mittwoch nach dem nächsten"
    example!(v, check_moment!(c, [2013, 2, 22]), "freitag nach dem nächsten");
    example!(v, check_moment!(c, [2013, 2, 11]), "montag dieser woche");
    example!(v, check_moment!(c, [2013, 2, 12]), "dienstag dieser woche");
    example!(v, check_moment!(c, [2013, 2, 13]), "mittwoch dieser woche");
    example!(v, check_moment!(c, [2013, 2, 14]), "übermorgen");
    example!(v, check_moment!(c, [2013, 2, 10]), "vorgestern");
    example!(v, check_moment!(c, [2013, 3, 25]), "letzter montag im märz");
    example!(v, check_moment!(c, [2014, 3, 30]), "letzter sonntag im märz 2014");
    example!(v, check_moment!(c, [2013, 10, 3]), "dritter tag im oktober");
    example!(v, check_moment!(c, [2014, 10, 6], Grain::Week), "erste woche im oktober 2014");
    example!(v, check_moment!(c, [2015, 10, 31]), "letzter tag im oktober 2015");
    example!(v, check_moment!(c, [2014, 9, 22], Grain::Week), "letzte woche im september 2014");
    // nth of
    example!(v, check_moment!(c, [2013, 10, 1]), "erster dienstag im oktober");
    example!(v, check_moment!(c, [2014, 9, 16]), "dritter dienstag im september 2014");
    example!(v, check_moment!(c, [2014, 10, 1]), "erster mittwoch im oktober 2014");
    example!(v, check_moment!(c, [2014, 10, 8]), "zweiter mittwoch im oktober 2014");
    // nth after
    example!(v, check_moment!(c, [2015, 1, 13]), "dritter dienstag nach weihnachten 2014");
    example!(v, check_moment!(c, [2013, 2, 12, 3]), "um 3 in der früh");
    example!(v, check_moment!(c, [2013, 2, 12, 15]), "um 3", "3 uhr", "um drei");
    // TODO Check this example
    //example!(v, check_moment!(c, [2013, 2, 13, 3, 18]), "3:18 fruh", "3:18"); //"3:18 früh", "3:18"
    example!(v, check_moment!(c, [2013, 2, 12, 15]), "um 3 am nachmittag", "um 15", "um 15 uhr", "15 uhr");
    example!(v, check_moment_with_precision!(c, [2013, 2, 12, 15], Precision::Approximate), "zirka 15 uhr", "zirka 3 uhr am nachmittag", "um ungefahr 15 uhr"); // "zirka 15 uhr", "zirka 3 uhr am nachmittag", "um ungefähr 15 uhr"
    example!(v, check_moment!(c, [2013, 2, 12, 15]), "um 3 am nachmittag", "um 15", "um 15 uhr", "15 uhr");
    example!(v, check_moment!(c, [2013, 2, 13, 17]), "pünktlich um 17 uhr morgen");
    example!(v, check_moment!(c, [2013, 2, 12, 15, 15]), "um viertel nach 3", "viertel nach drei Uhr", "3 uhr 15 am nachmittag", "15:15");
    example!(v, check_moment!(c, [2013, 2, 12, 15, 20]), "um 20 nach 3", "15:20 am nachmittag", "15 uhr 20 nachmittags", "zwanzig nach 3", "15:20");
    example!(v, check_moment!(c, [2013, 2, 12, 15, 30]), "um halb 4");
    example!(v, check_moment!(c, [2013, 2, 12, 15, 30]), "halb vier uhr nachmittags", "halb vier am nachmittag", "15:30");
    example!(v, check_moment!(c, [2013, 2, 13, 3, 30]), "3:30");
    example!(v, check_moment!(c, [2013, 2, 12, 11, 45]), "viertel vor 12", "11:45");
    example!(v, check_moment!(c, [2013, 2, 12, 11, 45], Grain::Second), "15 minuten vor 12");
    example!(v, check_moment!(c, [2013, 2, 12, 20]), "8 uhr am abend", "heute abend um 20 Uhr");
    example!(v, check_moment!(c, [2013, 2, 12, 20, 00]), "heute um 20:00");
    example!(v, check_moment!(c, [2013, 9, 20, 19, 30]), "um 19:30 am fr, 20. Sept.");
    example!(v, check_moment!(c, [2013, 2, 16, 9]), "am samstag um 9 Uhr");
    example!(v, check_moment!(c, [2014, 7, 18, 19]), "Fr, 18. Juli 2014 7 uhr abends");
    example!(v, check_moment!(c, [2013, 2, 12, 4, 30, 1]), "in einer sekunde");
    example!(v, check_moment!(c, [2013, 2, 12, 4, 31, 0]), "in einer minute");
    example!(v, check_moment!(c, [2013, 2, 12, 4, 32, 0]), "in 2 minuten");
    example!(v, check_moment!(c, [2013, 2, 12, 5, 30, 0]), "in 60 minuten");
    example!(v, check_moment!(c, [2013, 2, 12, 5, 0, 0]), "in einer halben stunde", "in 30 minuten");
    example!(v, check_moment!(c, [2013, 2, 12, 7, 0, 0]), "in 2.5 stunden", "in zwei ein halb stunden");
    example!(v, check_moment!(c, [2013, 2, 12, 5, 30]), "in einer stunde");
    example!(v, check_moment!(c, [2013, 2, 12, 6, 30]), "in zwei stunden");
    example!(v, check_moment!(c, [2013, 2, 12, 6, 30]), "in ein paar stunden");
    example!(v, check_moment!(c, [2013, 2, 13, 4, 30]), "in 24 stunden");
    example!(v, check_moment!(c, [2013, 2, 13]), "morgen");
    example!(v, check_moment!(c, [2016, 2]), "in 3 Jahren");
    example!(v, check_moment!(c, [2013, 2, 19]), "in 7 tagen");
    example!(v, check_moment!(c, [2013, 2, 19]), "in 1 woche", "in einer woche");
    example!(v, check_moment_with_precision!(c, [2013, 2, 12, 5, 0, 0], Precision::Approximate), "in zirka einer halben stunde");
    example!(v, check_moment!(c, [2013, 2, 5]), "vor 7 tagen");
    example!(v, check_moment!(c, [2013, 1, 29]), "vor 14 tagen");
    example!(v, check_moment!(c, [2013, 1, 29]), "vor zwei wochen");
    example!(v, check_moment!(c, [2013, 2, 5]), "vor einer woche");
    example!(v, check_moment!(c, [2013, 1, 22]), "vor drei wochen");
    example!(v, check_moment!(c, [2012, 11, 12]), "vor drei monaten");
    example!(v, check_moment!(c, [2011, 2]), "vor zwei jahren");
    example!(v, check_moment!(c, [2013, 2, 19]), "in 7 tagen");
    example!(v, check_moment!(c, [2013, 12]), "ein jahr nach weihnachten");
    example!(v, check_moment_span!(c, [2013, 6, 21], [2013, 9, 24]), "diesen sommer");
    example!(v, check_moment_span!(c, [2012, 12, 21], [2013, 3, 21]), "diesen winter");
    example!(v, check_moment!(c, [2013, 12, 25]), "Weihnachten", "Weihnachtstag");
    example!(v, check_moment!(c, [2013, 12, 31]), "Silvester");
    example!(v, check_moment!(c, [2014, 1, 1]), "Neujahrstag", "Neujahr");
    example!(v, check_moment!(c, [2013, 2, 14]), "Valentinstag");
    example!(v, check_moment!(c, [2013, 5, 12]), "Muttertag");
    //example!(v, check_moment!(c, [2013, 6, 16]), "Vatertag"); // TODO Lunear Calendar
    example!(v, check_moment!(c, [2013, 10, 3]), "Tag der Deutschen Einheit", "3. Oktober");
    example!(v, check_moment!(c, [2013, 10, 31]), "Halloween");
    example!(v, check_moment!(c, [2013, 11, 1]), "Allerheiligen");
    example!(v, check_moment!(c, [2013, 12, 06]), "Nikolaus", "Nikolaustag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 18], [2013, 2, 12, 23]), "heute abend", "am abend");
    example!(v, check_moment_span!(c, [2013, 2, 13, 18], [2013, 2, 13, 23]), "morgen abend");
    example!(v, check_moment!(c, [2013, 2, 13, 12]), "morgen mittag", "morgen zu mittag");
    example!(v, check_moment_span!(c, [2013, 2, 11, 18], [2013, 2, 11, 23]), "gestern abend");
    example!(v, check_moment_span!(c, [2013, 2, 15, 18], [2013, 2, 18, 00]), "dieses wochenende");
    example!(v, check_moment_span!(c, [2013, 2, 18, 4], [2013, 2, 18, 10]), "montag morgens");
    example!(v, check_moment_span!(c, [2013, 2, 15, 4], [2013, 2, 15, 10]), "morgens am 15. februar", "15. februar morgens", "am morgen des 15. februar");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4, 29, 58], [2013, 2, 12, 4, 30, 00]), "letzte 2 sekunden", "letzten zwei sekunden");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4, 30, 01], [2013, 2, 12, 4, 30, 04]), "nachste 3 sekunden", "nachsten drei sekunden", "nächste 3 sekunden", "nächsten drei sekunden");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4, 28], [2013, 2, 12, 4, 30]), "letzte 2 minuten", "letzten zwei minuten");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4, 31], [2013, 2, 12, 4, 34]), "nachste 3 minuten", "nachsten drei minuten", "nächste 3 minuten", "nächsten drei minuten");
    example!(v, check_moment_span!(c, [2013, 2, 12, 5], [2013, 2, 12, 8]), "nächste 3 stunden", "nächsten drei stunden");
    example!(v, check_moment_span!(c, [2013, 2, 10], [2013, 2, 12]), "letzte 2 tage", "letzten zwei tage", "vergangenen zwei tage");
    example!(v, check_moment_span!(c, [2013, 2, 13], [2013, 2, 16]), "nächsten 3 tagen", "nächsten drei tage", "kommenden drei tagen");
    example!(v, check_moment_span!(c, [2013, 2, 13], [2013, 2, 15]), "nächsten paar tagen", "kommenden paar tagen");
    example!(v, check_moment_span!(c, [2013, 1, 28], [2013, 2, 11], Grain::Week), "letzten 2 wochen", "letzte zwei wochen", "vergangenen 2 wochen");
    example!(v, check_moment_span!(c, [2013, 2, 18], [2013, 3, 11], Grain::Week), "nächsten 3 wochen", "nächste drei wochen", "kommenden drei wochen");
    example!(v, check_moment_span!(c, [2012, 12], [2013, 02]), "letzten 2 monaten", "letzte zwei monate", "vergangenen zwei monaten");
    example!(v, check_moment_span!(c, [2013, 3], [2013, 6]), "nächsten 3 monaten", "nächste drei monate", "kommenden drei monaten");
    example!(v, check_moment_span!(c, [2011], [2013]), "letzten 2 jahren", "letzten zwei jahre", "vergangenen zwei jahren");
    example!(v, check_moment_span!(c, [2014], [2017]), "nächsten 3 jahren", "kommenden drei jahren", "nächste drei jahre");
    example!(v, check_moment_span!(c, [2013, 7, 13], [2013, 7, 16]), "13. - 15. Juli", "13ter bis 15ter Juli", "13 bis 15 Juli", "13 - 15 Juli", "13 Juli - 15 Juli");
    example!(v, check_moment_span!(c, [2013, 8, 8], [2013, 8, 13]), "8 Aug - 12 Aug");
    example!(v, check_moment_span!(c, [2013, 2, 12, 9, 30], [2013, 2, 12, 11, 0]), "9:30 - 11:00");
    example!(v, check_moment_span!(c, [2013, 2, 14, 9, 30], [2013, 2, 14, 11, 0]),"am Donnerstag von 9:30 - 11:00", "am Donnerstag zwischen 9:30 und 11:00", "Donnerstag 9:30 - 11:00", "am Donnerstag nach 9:30 aber vor 11:00", "Donnerstag von 9:30 bis 11:00");
    example!(v, check_moment_span!(c, [2013, 2, 14, 9], [2013, 2, 14, 11]), "Donnerstag Vormittag von 9 bis 11");
    example!(v, check_moment_span!(c, [2013, 2, 12, 11, 30], [2013, 2, 12, 13, 30]), "11:30-13:30", "11:30-13:30", "11:30-13:30", "11:30-13:30", "11:30-13:30", "11:30-13:30", "11:30-13:30");
    example!(v, check_moment!(c, [2013, 9, 21, 1, 30]), "1:30 am Sa, 21. Sept");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4, 30, 0], [2013, 2, 26]), "binnen 2 wochen", "innerhalb von 2 wochen");
    example!(v, check_moment_with_direction!(c, [2013, 2, 12, 14], Direction::Before), "bis 2 Uhr nachmittag");
    example!(v, check_moment_with_direction!(c, [2013, 2, 13], Direction::Before, Grain::Hour), "bis zum ende des tages");
    example!(v, check_moment_with_direction!(c, [2013, 2, 7], Direction::After), "seit dem ende der woche");
    example!(v, check_moment_with_direction!(c, [2013 , 2, 18], Direction::Before, Grain::Day), "bis zum ende der woche");
    example!(v, check_moment_with_direction!(c, [2013, 3, 1], Direction::Before, Grain::Day), "bis zum ende des monats");
    example!(v, check_moment_with_direction!(c, [2014, 1, 1], Direction::Before, Grain::Month), "bis zum ende des jahres");
    example!(v, check_moment!(c, [2013, 2, 12, 14]), "heute um 14 Uhr", "um 2");
    example!(v, check_moment!(c, [2013, 2, 13, 15]), "morgen um 15 Uhr");
    example!(v, check_moment_with_direction!(c, [2013, 2, 12, 14], Direction::After), "nach 14 Uhr", "nach 14h", "nach 2");
    example!(v, check_moment_with_direction!(c, [2013, 2, 12, 11], Direction::Before), "bis 11 uhr", "bis 11h vormittags", "bis 11 am vormittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 13], [2013, 2, 12, 19]), "am nachmittag");
    example!(v, check_moment!(c, [2013, 2, 12, 13, 30]), "um 13:30 am nachmittag", "nachmittags um 1 uhr 30", "13:30");
    example!(v, check_moment!(c, [2013, 2, 12, 4, 45, 0]), "in 15 minuten");
    example!(v, check_moment!(c, [2013, 2, 12, 10, 30]), "10:30");
    example!(v, check_moment!(c, [2013, 2, 18]), "nächsten montag", "kommenden montag");
    example!(v, check_moment!(c, [2013, 12, 10]), "10.12.");
    example!(v, check_moment_span!(c, [2013, 2, 12, 18, 30], [2013, 2, 12, 19, 1]), "18:30h - 19:00h");

    // Additional examples
    example!(v, check_moment!(c, [2013, 2, 12, 6, 0, 0]), "in anderthalb stunde");
    example!(v, check_moment!(c, [2013, 2, 12, 6, 0, 0]), "in eineinhalb std", "in eineinhalb Std.");
    example!(v, check_moment!(c, [2013, 2, 12, 5]), "in der nächsten Stunde");
    example!(v, check_moment_with_precision!(c, [2013, 3, 5], Precision::Approximate), "in fast drei Wochen");
    example!(v, check_moment!(c, [2013, 2, 12, 5, 45, 0]), "in einer Stunde und eine viertelstunde");
    example!(v, check_moment!(c, [2013, 2, 12, 6, 0, 0]), "in einer Stunde und dreissig minuten");
    example!(v, check_moment!(c, [2013, 2, 12, 7, 30]), "In drei Stunden ab sofort");
    example!(v, check_moment!(c, [2013, 2]), "in diesem Monat", "diesem Monat");
    example!(v, check_moment!(c, [2013]), "in diesem Jahr");
    example!(v, check_moment!(c, [2013, 2, 4], Grain::Week), "vorige woche", "vorherige Woche");
    example!(v, check_moment!(c, [2013, 5, 3]), "den dritten tag in mai");
    example!(v, check_moment!(c, [2014, 1, 20], Grain::Week), "die vierte Woche nach Weihnachten");
    //example!(v, check_moment!(c, [2013, 6, ]), "männertag"); // TODO Lunear Calendar
    example!(v, check_moment!(c, [2017, 5, 12, 10, 32]), "Freitag, der Zwölfte Mai um 10 Uhr 32 vormittags");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4, 31], [2013, 2, 12, 4, 50]), "in den nächsten neunzehn minuten");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4, 30], [2013, 2, 12, 6]), "in der nächsten eineinhalb Stunde");
    example!(v, check_moment_span!(c, [2013, 2, 18], [2013, 7, 1]), "in den kommenden neunzehn Wochen");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4], [2013, 2, 12, 7]), "bei tagesanbruch", "beim morgengrauen", "im morgengrauen");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4], [2013, 2, 12, 9]), "in der früh", "frühmorgens", "am frühen morgen");
    example!(v, check_moment_span!(c, [2013, 2, 12, 4], [2013, 2, 12, 10]), "morgens", "am morgen");
    example!(v, check_moment_span!(c, [2013, 2, 12, 7], [2013, 2, 12, 9]), "am frühen vormittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 7], [2013, 2, 12, 12]), "am vormittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 10], [2013, 2, 12, 12]), "am späten vormittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 11], [2013, 2, 12, 12]), "kurz vor mittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 12], [2013, 2, 12, 13]), "kurz nach mittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 13], [2013, 2, 12, 14]), "nach dem mittagessen");
    example!(v, check_moment_span!(c, [2013, 2, 12, 13], [2013, 2, 12, 16]), "fruhen nachmittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 13], [2013, 2, 12, 19]), "nachmittags");
    example!(v, check_moment_span!(c, [2013, 2, 12, 16], [2013, 2, 12, 19]), "am späten nachmittag");
    example!(v, check_moment_span!(c, [2013, 2, 12, 18], [2013, 2, 12, 21]), "abend früh");
    example!(v, check_moment_span!(c, [2013, 2, 12, 18], [2013, 2, 12, 23]), "abend");
    example!(v, check_moment_span!(c, [2013, 2, 12, 21], [2013, 2, 12, 23]), "abend spät");
    example!(v, check_moment_span!(c, [2013, 2, 12, 21], [2013, 2, 13, 0]), "frühe nachtstunden");
    example!(v, check_moment_span!(c, [2013, 2, 11, 23], [2013, 2, 12, 5]), "nachts");
    example!(v, check_moment_span!(c, [2013, 2, 13, 0], [2013, 2, 13, 3]), "tief in der nacht");
    example!(v, check_moment_span!(c, [2013, 2, 12, 3], [2013, 2, 12, 5]), "spät in der nacht");
    example!(v, check_moment_span!(c, [2013, 2, 12, 16], [2013, 2, 12, 19]), "am späten nachmittag","in den späten nachmittagsstunden","zu später nachmittagsstunde","spätnachmittags","spätnachmittag");
    example!(v, check_moment!(c, [2013, 7, 15], Grain::Week), "die dritte juliwoche");
    example!(v, check_moment_span!(c, [2013, 2, 11, 7], [2013, 2, 11, 11, 31]), "ab dem frühen vormittag bis nach halb zwölf");
    example!(v, check_moment!(c, [2013, 2, 12, 11, 15]), "um viertel mittag");
    example!(v, check_moment!(c, [2013, 2, 12, 13, 44]), "ein uhr und vierundvierzig minuten");
    example!(v, check_moment_span!(c, [2013, 2, 11, 1, 9], [2013, 2, 11, 3, 25]), "gestern zwischen ein uhr und neun minuten und drei uhr und fünfundzwanzig minuten");
    example!(v, check_moment_span!(c, [2013, 2, 13, 00, 45], [2013, 2, 13, 1, 00]), "zwischen dreiviertel eins und ein uhr morgen");
    example!(v, check_moment_with_direction!(c, [2013, 2, 14], Direction::Before), "bis Donnerstag");

}

pub fn examples_numbers(v: &mut Vec<::rustling::train::Example<Dimension>>) {
    example!(v, check_integer(0), "0", "null");
    example!(v, check_integer(1), "1", "eins");
    example!(v, check_integer(3), "3", "drei");
    example!(v, check_integer(30), "30", "dreissig");
    example!(v, check_integer(33), "33", "drei und dreissig", "dreiunddreissig", "0033");
    example!(v, check_integer(14), "14", "vierzehn");
    example!(v, check_integer(16), "16", "sechzehn");
    example!(v, check_integer(17), "17", "siebzehn");
    example!(v, check_integer(18), "18", "achtzehn");
    example!(v, check_integer(200), "200", "zwei hundert");
    example!(v, check_integer(102), "102", "hundert zwei");
    example!(v, check_float(1.1), "1,1", "1 komma 1", "1,10", "01,10");
    example!(v, check_float(0.77), "0,77", ",77");
    example!(v, check_integer(100000), "100.000", "100000", "100K", "100k");
    example!(v, check_integer(3000000), "3M", "3000K", "3000000", "3.000.000");
    example!(v, check_integer(1200000), "1.200.000", "1200000", "1,2M", "1200K", ",0012G");
    example!(v, check_integer(-1200000), "- 1.200.000", "-1200000", "minus 1.200.000", "negativ 1200000", "-1,2M", "-1200K", "-,0012G");
    example!(v, check_integer(5000), "5 tausend", "fünf tausend");
    example!(v, check_integer(200000), "zwei hundert tausend");
    example!(v, check_integer(21311), "ein und zwanzig tausend drei hundert elf");
    example!(v, check_integer(721012), "sieben hundert einundzwanzig tausend zwölf");
    example!(v, check_integer(31256721), "ein und dreissig millionen zwei hundert sechs und fünfzig tausend sieben hundert ein und zwanzig");
    example!(v, check_ordinal(4), "vierter", "4ter");
    example!(v, check_float(1416.15), "1416,15");
    example!(v, check_float(1416.15), "1.416,15");
    example!(v, check_float(1.1), "1,1", "1,10", "01,10", "eins komma eins", "eins komma zehn");
    example!(v, check_float(0.5), "0,5", "0,50", "null komma fünf", "null komma fünfzig");
    //example!(v, check_float(32.75), "32,75", "zweiunddreißig komma fünfundsiebzig");
    example!(v, check_float(10.08), "10,08", "zehn komma null acht");
    example!(v, check_float(1000000.0), "1.000.000,00");
    example!(v, check_ordinal(44), "der vierundvierzigste");
    example!(v, check_integer(455628), "vierhundertfünfundfünfzigtausendsechshundertachtundzwanzig");
}